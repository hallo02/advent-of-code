package ch.hallo02.adventofcode.year2023.day16;

import java.util.*;

import static ch.hallo02.adventofcode.year2023.day16.Day16_2.Direction.*;

public class Day16_2 {

    // win 7594
    static Set<Tuple> visited;
    static Deque<Tuple> toDo;
    static char[][] area;

    static class Tuple {
        int line;
        int position;
        Direction direction;


        Tuple(int line, int position, Direction direction) {
            this.line = line;
            this.position = position;
            this.direction = direction;
        }

        @Override
        public boolean equals(Object o) {
            if (this == o) return true;
            if (o == null || getClass() != o.getClass()) return false;
            Tuple tuple = (Tuple) o;
            return line == tuple.line && position == tuple.position && direction == tuple.direction;
        }

        @Override
        public int hashCode() {
            return Objects.hash(line, position, direction);
        }
    }

    enum Direction {
        UP, LEFT, DOWN, RIGHT;
    }

    public static void main(String... args) {

        long max = 0;
        area = getArea(puzzle);

        // from above
        System.out.println("above");
        for (int i = 0; i < area[0].length; i++) {
            visited = new HashSet<>();
            toDo = new LinkedList<>();
            toDo.add(new Tuple(0, i, DOWN));
            walk();
            long amount = visited.stream()
                    .map(t -> new Tuple(t.line, t.position, null))
                    .distinct()
                    .count();
            max = amount > max ? amount : max;
        }

        // from left
        System.out.println("left");
        for (int i = 0; i < area.length; i++) {
            visited = new HashSet<>();
            toDo = new LinkedList<>();
            toDo.add(new Tuple(i, 0, RIGHT));
            walk();
            long amount = visited.stream()
                    .map(t -> new Tuple(t.line, t.position, null))
                    .distinct()
                    .count();
            max = amount > max ? amount : max;
        }

        // from below
        System.out.println("below");
        for (int i = 0; i < area[0].length; i++) {
            visited = new HashSet<>();
            toDo = new LinkedList<>();
            toDo.add(new Tuple(area.length - 1, i, UP));
            walk();
            long amount = visited.stream()
                    .map(t -> new Tuple(t.line, t.position, null))
                    .distinct()
                    .count();
            max = amount > max ? amount : max;
        }

        // from right
        System.out.println("right");
        for (int i = 0; i < area.length; i++) {
            visited = new HashSet<>();
            toDo = new LinkedList<>();
            toDo.add(new Tuple(i, area[0].length - 1, LEFT));
            walk();
            long amount = visited.stream()
                    .map(t -> new Tuple(t.line, t.position, null))
                    .distinct()
                    .count();
            max = amount > max ? amount : max;
        }
        System.out.println(max);
    }

    static Tuple getUnseenTupleOrNull() {
        while (!toDo.isEmpty()) {
            var c = toDo.pop();
            if (!visited.contains(c)) {
                if (c.line < area.length && c.line >= 0 && c.position < area[0].length && c.position >= 0) {
                    return c;
                }
            }
        }
        return null;
    }

    static void walk() {

        var tuple = toDo.pop();
        int l = tuple.line;
        int p = tuple.position;
        Direction d = tuple.direction;

        while (true) {
            if (l < 0 || p < 0 || l == area.length || p == area[0].length) {
                var c = getUnseenTupleOrNull();
                if (c == null) {
                    return;
                }
                l = c.line;
                p = c.position;
                d = c.direction;
            }

            if (visited.contains(new Tuple(l, p, d))) {
                var c = getUnseenTupleOrNull();
                if (c == null) {
                    return;
                }
                l = c.line;
                p = c.position;
                d = c.direction;
            }

            visited.add(new Tuple(l, p, d));
            char current = area[l][p];

            // .
            if (current == '.' && d == Direction.UP) {
                l--;
            } else if (current == '.' && d == LEFT) {
                p--;
            } else if (current == '.' && d == Direction.DOWN) {
                l++;
            } else if (current == '.' && d == RIGHT) {
                p++;
            }
            // |
            else if (current == '|' && d == Direction.UP) {
                l--;

            } else if (current == '|' && d == LEFT) {
                toDo.add(new Tuple(l + 1, p, DOWN));
                l--;
                d = UP;

            } else if (current == '|' && d == Direction.DOWN) {
                l++;

            } else if (current == '|' && d == RIGHT) {
                toDo.add(new Tuple(l + 1, p, DOWN));
                l--;
                d = UP;
            }
            // -
            else if (current == '-' && d == Direction.UP) {
                toDo.add(new Tuple(l, p - 1, LEFT));
                p++;
                d = RIGHT;

            } else if (current == '-' && d == LEFT) {
                p--;

            } else if (current == '-' && d == Direction.DOWN) {
                toDo.add(new Tuple(l, p - 1, LEFT));
                p++;
                d = RIGHT;

            } else if (current == '-' && d == RIGHT) {
                p++;
            }
            // \
            else if (current == '\\' && d == Direction.UP) {
                p--;
                d = LEFT;

            } else if (current == '\\' && d == LEFT) {
                l--;
                d = UP;

            } else if (current == '\\' && d == Direction.DOWN) {
                p++;
                d = RIGHT;

            } else if (current == '\\' && d == RIGHT) {
                l++;
                d = DOWN;

            }

            // /
            else if (current == '/' && d == Direction.UP) {
                p++;
                d = RIGHT;
            } else if (current == '/' && d == LEFT) {
                l++;
                d = DOWN;

            } else if (current == '/' && d == Direction.DOWN) {
                p--;
                d = LEFT;

            } else if (current == '/' && d == RIGHT) {
                l--;
                d = UP;

            }
        }
    }


    static char[][] getArea(String input) {

        var lines = input.lines().toList();
        var area = new char[lines.size()][lines.get(0).length()]; // Y X

        for (int l = 0; l < lines.size(); l++) {
            for (int p = 0; p < lines.get(0).length(); p++) {
                area[l][p] = lines.get(l).charAt(p);
            }
        }
        return area;

    }

    static String mPuzzle = """
            .|...\\....
            |.-.\\.....
            .....|-...
            ........|.
            ..........
            .........\\
            ..../.\\\\..
            .-.-/..|..
            .|....-|.\\
            ..//.|....""";
    static String puzzle = """
            \\..................-...|..............................|./................-.....................\\.../..........
            .-....../.....-..........|..-.........................|............/.......................\\....\\......-......
            ........|...\\..............|/.........|...../...............................\\../............../...............
            ...................-.............-.|......-................\\........-...............-....\\..../\\....|..\\......
            .............|............\\....................../..........\\..../\\...........................................
            ..............................|.............../..|......-......./........|..............................|..-.\\
            ..............-............/|...\\..\\./.\\............./.............-.......\\............./../............-....
            .........................................|.........../................................/..........|......|../..
            ......|.........\\..\\..............................|.....-\\.-.\\...........|...............-....-....\\..........
            ...........................\\\\....|......|..............|....-../.....\\|....|\\........../..-...................
            ...........-..../.|.......-|...-.......................|.......-.|..../........................\\/.............
            .....................-.............\\.............../............................................\\\\............
            ......-..........-.-..|...........|...........................\\...............................|...........|...
            ................--...\\........\\.................../................................../............-...........
            ...............|../............/...../......./..\\............|..../-...........|..................\\.-.........
            |....................|-.\\...........\\...\\.............................................../................\\....
            \\.|................\\.\\...................\\....-./....\\......../...................-.....................-.....
            ...................................................|........../......\\.................|..\\.............../...
            ................/.............|......|...........-......................|...-.................../../..|.....-.
            .................|-..|.........................-............\\....-./......-......../............/.....|.......
            .....|.........-.....-.....-................/\\..........-........|...\\../..|.......-.........-...........-....
            ......................./.........../........|............\\............../........./.....\\....-/...............
            /........./.......|........|..../../........|............................\\........./-..-..............|.....|.
            ...........|.........-/........-...|/.............................-....|.....\\........................|.......
            .|..\\............/.-..........\\........-.............../.......\\...........\\..............\\../-..-|.|-........
            ..\\-|.......................\\.......\\.\\.....\\............-...../.......-....../.............................-.
            .-........................|........../.....................................-....\\.............................
            ..../.............-.................\\.|........................./............/.|..../../................\\-....
            ........../-................./........|......-../........|..-........./........./...........\\............\\....
            ......../.......................\\..-............-...................\\.....................\\/........\\...../...
            ....../....|..........-.....-/.................-...\\..........................................................
            /.........\\.............-....|.-..\\...../../......./|............................................./...../.....
            .......-..|............./.............../|....../..................\\....--..-./............./............./..-
            -...........|............/.........-..|..................../....................../...........|...\\\\..........
            /...-........../....................................|.......-.....|............|........././..\\...............
            ....................../....\\........|.....|....\\.......-............|\\....\\../.....--.....-.|.................
            ..../........-.....\\........\\.....\\...............|/..................|........./...-......|.................|
            .......................-.......//..................|...........|-....-..-...........-.......-....\\...../....\\.
            ..................-..../......./-............/.../...\\...\\../............\\\\.|.................................
            ........../.........|...-..........--....................../.......................-......../......\\..........
            ..|........../...........|............./...............|........-....\\.....\\...............-.....-....../.-...
            ...../.-..|\\...|...............................-...|....\\......|.............../.\\............\\............\\..
            ................\\/.....|..........\\.................../........\\./...................-........................
            .........\\...../..|............|...............|.-.....................\\....\\\\.|........../.......|...........
            ......................\\\\..../.....\\.....\\..........|....................\\.....................................
            .\\......./............-\\........../.........-...../....../....-..............-........................\\.....|.
            ...........\\.......-.....\\...\\/.......-..............-...........\\...................../.................\\....
            ............-.../.....|..............-.............|......|.......|..|.............../...|.....\\..............
            ................-..................\\..|............./.................\\....|..//.......|.../..................
            ........|.../...|....../...\\....................../....-...............-........|..........................|..
            ..|...../..............................-............|..........-........|.........../..|..|...................
            .....-..........-.....-.........................................|.........\\....-.....\\...........-..../...|...
            .-.-........../.................../...........-................|..-............../..-..-......................
            /-\\.........................-|.........-......|....|-...........-...................................-...\\.....
            ...\\.........|.............././...........|./.................-........\\.........\\.../|........./....\\\\.......
            ..|.................-......\\./....||.........\\....|..........-......|.................\\..........\\.....-../...
            ......../.|................................../...................|..\\\\.....--...................-..|..........
            .-........-......./...\\....|....../..........-./......./..|................\\/......../......../....../........
            ...-....../.|........./.............\\.....|../.-./.......................-....|.........\\......|/..........|..
            .....|................//.\\......|.\\/.................................|-...//........./...-.-............\\.....
            .............../...............\\..-....................-..../........../....-...............|-.......\\../...\\.
            ..|......\\........./../..................|....|................|\\.|....\\....-.|.......-../......||.-.|....\\./.
            ......|./.................\\............|.......................\\........-.....-...../..........\\......-.../..|
            .....|.\\....\\..............-......-./......./......................../............|..............|............
            ..............................\\..................../................|.................-......./.........../...
            .......-.....-..........\\..-...../.....\\.\\..............\\..\\....../.|.../...............-..................\\..
            .................|..................-.\\....................................\\.....-............................
            ...-.......|........-....-.......-....-..........-.-..\\.......................................\\.-.../......../
            .............-......\\................-.....-.....-/......./...\\\\../.................\\....-......./..-.....-|..
            ....\\.............|..-......./-......|............\\.........-........\\..../...\\.......|.|..-...\\..............
            .....................-....................................../.......\\....\\........................../\\..../\\..
            ........-............\\....\\./...........\\.-........./........./..\\.........................../....-..|......|.
            ..................../.........../.\\..............-............\\.........\\/...\\..................-.............
            .-...\\......\\.............................................................-.............\\.\\.-......|..........
            ................|..............|.-........../......\\.............|............./.|..-|..........|.............
            ...-........../....\\.../.../.........................................................../.........|.-......-...
            ..-....................-..........................|..../.......|........|../......./....../...-......../....-.
            ........\\............................-.......\\...../\\......|\\......-............./.........-..................
            ...../...../|..............|.-.....\\....-/...........\\...............\\.\\.......................-.-............
            ......\\.......\\.....................|................................\\.....\\..............................\\./.
            \\...............................-.............-../-............................./...............\\.|...........
            ......|......|................-|..-....\\/....\\...................-...........|...../....................\\\\....
            .............../..............-...|....................\\\\..............-....\\..........\\...............|....|.
            ...\\.-.......|..-/...................../|............\\......-.../...................../.......................
            ........../........./.........-....\\........................|./......./..............-...-....................
            ....-|-..............\\.......................\\.................|.......\\.........../..........-......./.......
            ..-...........................|\\.................\\................/\\................................../.|.....
            ......\\.................................|........\\./............-..............\\..........-.........../..-....
            ................-..........|.............|.....|....................-..........\\......|-\\....|...........-....
            ...|.........../\\............./.........\\........\\....................|...........................-.\\.........
            ../.|...................././......-..............-\\.....-........-.|...........\\......-./..-..................
            ......\\.......-..-..............................-................|.................../........................
            ..\\..-................/..-....-........./..........................-.../...........................-..........
            ............./-./.\\........./....-....................././.....|............-...............|./...........-|..
            ...................-...\\.....\\....................../............--....................../...........\\........
            .............-.....\\......\\./........................../.....................-...................\\.........-|.
            .....\\.........\\.../......................\\..................|.............................\\.|........./.....|
            .....\\.....\\./..............-............../..............\\.......|........../..//.-...-.\\......../.........\\.
            ..............\\...\\..........................\\...\\./.-...|.........|.......|..\\../.........................|..
            .\\..|......\\.\\\\.........../....../....../......./................../..|................/....|.................
            ./|............./...................................\\.-....\\..\\|./.-.............................\\.......\\....
            \\./........./.....\\............................/.../...\\....................|..............|.|............/|..
            ..\\............\\............\\.....-..........\\.......|../.|......./|......-...--...-..\\......|./.-......-.....
            ...............\\........|............\\|....|..\\.......-................/.........|....\\-.|.|..../-.......|....
            ...................|/.............|............/................|..|.\\.|.........|...\\........................
            ..................|../..../.......-................................-......................-.........|.......\\.
            ...............\\...../......\\./...../............/...........-..........\\....../.....\\.....\\......|...........
            ../........\\.....|..................\\......./.......-../.......\\.../.|....................................|...
            .|.|..\\....\\.|./.../........................./........-..\\.../.............\\.............................|....
            ..................|...\\................-..-/..................-...|./..................-..|...................""";
}
